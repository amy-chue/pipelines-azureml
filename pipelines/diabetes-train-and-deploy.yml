variables:
  ml-ws-connection: 'amy-aml-connector' # Workspace Service Connection name
  ml-ws: 'amy-ae-workspace' # AML Workspace name
  ml-rg: 'amy-data-demo' # AML resource Group name
  ml-ct: 'amy-test-cluster' # AML Compute cluster name
  ml-path: 'models/diabetes' # Model directory path in repo
  ml-exp: 'devops-test' # Experiment name
  ml-model-name: 'diabetes-model' # Model name
  ml-aks-name: 'amy-aks' # AKS cluster name

trigger:
- master

pool:
  vmImage: 'Ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      print('Hello world 1')
      print('Hello world 2')

- script: sudo apt-get remove -y azure-cli
  displayName: 'remove buggy azure-cli'

- script: python -m pip install --upgrade pip setuptools wheel
  displayName: 'upgrade necessary tools'
  
- script: python -m pip install azure-cli
  displayName: 'install working azure-cli'

- task: AzureCLI@2
  displayName: 'Install AML CLI'
  inputs:
    azureSubscription: $(ml-ws-connection)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az extension add -n azure-cli-ml'

- task: AzureCLI@2
  displayName: 'Attach folder to workspace'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml folder attach -w $(ml-ws) -g $(ml-rg)'

- task: AzureCLI@2
  displayName: 'Create compute for training'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml computetarget create amlcompute -n $(ml-ct) --vm-size STANDARD_D2_V2 --max-nodes 1'
  

- task: AzureCLI@2
  displayName: 'Train model'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml run submit-script -c config/train --ct $(ml-ct) -e $(ml-exp) -t run.json train.py'

# Add potential approval step before registration of model

- task: AzureCLI@2
  displayName: 'Register model'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml model register -n $(ml-model-name) -f run.json --asset-path outputs/ridge_0.95.pkl -t model.json'

- task: AzureCLI@2
  displayName: 'Deploy model to ACI for QA'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml model deploy -n diabetes-qa-aci -f model.json --ic config/inference-config.yml --dc config/deployment-config-aci.yml --overwrite'

# Add potential automated tests

- task: AzureCLI@2
  displayName: 'Create AKS cluster'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml computetarget create aks --name $(ml-aks-name) --cluster-purpose DevTest'

- task: AzureCLI@2
  displayName: 'Deploy model to AKS for Production'
  inputs:
    azureSubscription: $(ml-ws-connection)
    workingDirectory: $(ml-path)
    scriptLocation: inlineScript
    scriptType: 'bash'
    inlineScript: 'az ml model deploy --name diabetes-prod-aks --ct $(ml-aks-name) -f model.json --ic config/inference-config.yml --dc config/deployment-config-aks.yml  --overwrite'

#- task: AzureCLI@2
#  displayName: 'Delete deployed service'
#  inputs:
#    azureSubscription: $(ml-ws-connection)
#    workingDirectory: $(ml-path)
#    scriptLocation: inlineScript
#    scriptType: 'bash'
#    inlineScript: 'az ml service delete -n diabetes-qa-aci'
